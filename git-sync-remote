#!/bin/sh
#https://github.com/IgnoredAmbience/github-gitlab-sync/blob/master/git-sync-remote

# Terminate on first failure
set -e

errors=0

msg2slack()
{
    curl --silent -X POST -k -H 'Content-type: application/json' --data "{\"text\":\"$1\",\"attachments\": [   {  \"fallback\": \"go to build ${BUILD_URL}\",  \"actions\": [ {  \"type\": \"button\", \"text\": \"go to build\", \"url\": \"${BUILD_URL}\"  }  ] }]}" ${SLACK_URL}
}

bfg_cleanup()
{
echo "******* bfg cleanup ******"
    java -jar /usr/bin/bfg-1.13.0.jar --strip-blobs-bigger-than ${BFG_SIZE_LIMIT} . > /dev/null
    git reflog expire --expire=now --all
    git gc --prune=now --aggressive
}

echo "Delete existing branches"
git checkout --detach
for branch in $(git for-each-ref --format '%(refname:short)' refs/heads); do
  git branch -D $branch
done

echo "Add and fetch remotes"
git remote add from ${SRC_URL}  2>/dev/null || git remote set-url from ${SRC_URL}
git remote add to   ${DEST_URL}  2>/dev/null || git remote set-url to   ${DEST_URL}
git fetch --multiple --prune from to

echo "Create locals"
for pushfrom in $(git for-each-ref --format '%(refname)' refs/remotes/from); do
  name="${pushfrom##refs/remotes/from/}"
  pushto="refs/remotes/to/$name"
  if ( ! git show-ref $pushto > /dev/null) || git merge-base --is-ancestor $pushto $pushfrom > /dev/null; then
    git branch -f $name $pushfrom
  else
    echo "Failed to fast-forward $pushfrom to $pushto, relevant commits:"
    git show-ref $name
    errors=1
  fi
done

${ENABLE_BFG} && bfg_cleanup

echo "Push to remotes"
git push --tags --follow-tags to refs/heads/*:refs/heads/*

if [[ $errors -eq 0 ]]; then
    ${NOTIFY_ON_SUCCESS} && msg2slack "successful sync at *${PROJECT_NAME}:${PR_NAME}*. \n triggered by ${TRIGGERED_BY}\n"
else
    ${NOTIFY_ON_FAILURE} && msg2slack "CONFLICTS at *${PROJECT_NAME}:${PR_NAME}*, aborting. \n sync triggered by ${TRIGGERED_BY}\n"
fi
exit $errors
